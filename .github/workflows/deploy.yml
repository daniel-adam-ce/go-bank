name: Deploy to production

on:
  push:
    branches: [ "main" ]

jobs:

  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code 
      uses: actions/checkout@v4

    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.31.0' # default is latest stable
      id: install
      
    # - name: Create .env
    #   run:  |
    #     echo "${{ secrets.DEV_ENV }}" > .env
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Load secrets into .env
      run: aws secretsmanager get-secret-value --secret-id go_bank --query SecretString --output text | jq 'to_entries|map("\(.key)=\(.value)")|.[]' --raw-output > .env

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: gobank
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

    - name: Deploy image to Amazon EKS
      run: |
        kubectl apply -f eks/aws-auth.yaml
        kubectl apply -f eks/deployment.yaml
        kubectl apply -f eks/service.yaml
        kubectl apply -f eks/ingress.yaml
        export ACME_EMAIL=${{ secrets.ACME_EMAIL }}
        envsubst < eks/issuer.yaml | kubectl apply -f -
        kubectl apply -f eks/issuer.yaml