syntax = "proto3";

package pb;

import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/daniel-adam-ce/go-bank/pb";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Go Bank"
    version: "1.2"
    contact: {
      name: "Daniel Adam"
      url: "https://github.com/daniel-adam-ce/go-bank"
    }
  }
};

service GoBank {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
          post: "/v1/create_user"
          body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to create a new user";
          summary: "Create new user"
        };
    }
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
            patch: "/v1/update_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to update a user";
          summary: "Update user"
        };
    }
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to login a user and get acces and refresh tokens";
          summary: "Login user"
        };
    }
}